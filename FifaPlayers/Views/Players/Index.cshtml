
@{
    ViewData["Title"] = "Players";

}
@{
    // Since Address isn't a string, it requires a cast.
    var playersList = ViewData["Players"] as List<Player>;
    Player[] players = playersList.ToArray();
}




<script>
    function toFeet(n) {
        var realFeet = ((n * 0.393700) / 12);
        var feet = Math.floor(realFeet);
        var inches = Math.round((realFeet - feet) * 12);
        return feet + "\" " + inches + '\'';
    }

    //holds player object and 
    function PlayerRow(player)
    {
        self = this;
        self.player = player;
        self.formattedHeight = ko.computed(function () {
            return toFeet(self.player.height);
        });    
    }

    function PlayersViewModel() {
        var self = this;

        // this is the list of players
        self.serverplayers = [
        @for (int i = 0; i < players.Length; i++)
        {
            @if (i != players.Length - 1)
            {
                @:{name:"@players[i].Name",age:"@players[i].Age",height:"@players[i].Height",weight:"@players[i].Weight",rating:"@players[i].Rating",club:"@players[i].Club",position:"@players[i].Position",nationality:"@players[i].Nationality"},
            }
            else
            {
                @:{name:"@players[i].Name",age:"@players[i].Age",height:"@players[i].Height",weight:"@players[i].Weight",rating:"@players[i].Rating",club:"@players[i].Club",position:"@players[i].Position",nationality:"@players[i].Nationality"}
            }
        }
        ];

        self.league = ko.observable("");
        self.leagueOptions = ko.observableArray([]);

        self.club = ko.observable("");
        self.clubOptions = ko.observableArray([]);


        self.players = ko.observableArray([]);
        for (player in self.serverplayers)
        {
            self.players.push(new PlayerRow(self.serverplayers[player]));
        }

        self.shout = function (player) {
            alert(player.player.name);
        }

        //called when user is typing in leagues to offer suggestions via the dropdown.
        self.leagueSearch = function (data, event) {
            var currentSearch = event.currentTarget.value;
            if (currentSearch != "") {
                $.get("Leagues/SearchLeagues?league=" + currentSearch, function (data) {
                    console.log('got league data for ' + currentSearch + "; Applicable leagues =" + data.length);
                    self.leagueOptions.removeAll();
                    $.each(data, function (index, value) {
                        self.leagueOptions.push(value);
                    });
                    //open the dropdown options for the user to see if it isn't already open
                    if ($('#leagueDropdownbutton').attr('aria-expanded') == "false")
                    {
                        $('#leagueDropdownbutton').click();
                    }
                    //Give back focus to where they were typing.
                    $('#leagueInputElement').focus();
                });
            }
        }

        //called when a dropdown league is selected.
        self.selectLeague = function (league) {
            console.log("selected league " + league.name);
            $('#leagueInputElement').val(league.name);
        }


        //called when user is typing in clubs to offer suggestions via the dropdown.
        self.clubSearch = function (data, event) {
            var currentSearch = event.currentTarget.value;
            
            if (currentSearch != "") {
                var url = { club: currentSearch };
                var league = $('#leagueInputElement').val();
                if (league != "") {
                    url.league = league;
                }
                $.get("Clubs/SearchClubs",url, function (data) {
                    console.log('got club data for ' + currentSearch + "; Applicable clubs =" + data.length);
                    self.clubOptions.removeAll();
                    $.each(data, function (index, value) {
                        self.clubOptions.push(value);
                    });
                    //open the dropdown options for the user to see if it isn't already open
                    if ($('#clubDropdownbutton').attr('aria-expanded') == "false") {
                        $('#clubDropdownbutton').click();
                    }
                    //Give back focus to where they were typing.
                    $('#clubInputElement').focus();
                });
            }
        }

        //called when a dropdown club is selected.
        self.selectClub = function (club) {
            console.log("selected club " + club.name);
            $('#clubInputElement').val(club.name);
        }

        self.searchPlayers = function () {
            console.log('search players');
            var url = {};
            var league = $('#leagueInputElement').val();
            var club = $('#clubInputElement').val();
            if (club != "") {
                url.club = club;
            }
            if (league != "") {
                url.league = league;
            }
            $.get("Players/SearchPlayers?", 
                url, function (data) {
                    console.log("Searched players length=" + data.length);
                    self.serverplayers = data;
                    self.players.removeAll();
                    for (player in self.serverplayers) {
                        self.players.push(new PlayerRow(self.serverplayers[player]));
                    }
            });
        }
    }

    window.onload = function () {
        ko.applyBindings(new PlayersViewModel());
    }
</script>
<style>
    .player
    {
        border-style:solid;
        margin:5px;
    }

    #searchBoxes
    {
        margin:5px;
    }

    .row
    {
        margin-top:5px;
    }
</style>
<div class="row" id="leagueSearchDiv">
    <div class="col-lg-8 offset-lg-4">
        <div id="leagueInput" class="input-group">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon1">League</span>
            </div>
                <input id="leagueInputElement"type="text" class="form-control" aria-label="Text input with dropdown button" data-bind="value: league,valueUpdate: 'afterkeydown', event: { 'keyup': leagueSearch }">
                <div class="input-group-append">
                    <button id ="leagueDropdownbutton" class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
                    
                    <div id="leagueDropDown" class="dropdown-menu" data-bind="foreach: leagueOptions">
                        
                        <a class="dropdown-item" href="#" data-bind="text: name,click: $root.selectLeague"></a>
                    </div>
                        
                </div>
         </div>
    </div>
</div>

<div class="row" id="clubSearchDiv">
    <div class="col-lg-8 offset-lg-4">
        <div id="clubInput" class="input-group">
            <div class="input-group-append">
                <span class="input-group-text" id="basic-addon1">Club</span>
            </div>
            <input id="clubInputElement" type="text" class="form-control" aria-label="Text input with dropdown button" data-bind="value: club,valueUpdate: 'afterkeydown', event: { 'keyup': clubSearch }">
            <div class="input-group-append">
                <button id="clubDropdownbutton" class="btn btn-outline-secondary dropdown-toggle" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>

                <div id="clubDropDown" class="dropdown-menu" data-bind="foreach: clubOptions">

                    <a class="dropdown-item" href="#" data-bind="text: name,click: $root.selectClub"></a>
                </div>

            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-lg-2 offset-lg-10">
        <button class="btn btn-default" data-bind="click: searchPlayers">Search</button>
    </div>
</div>

<div class="players"> 
    <div data-bind="foreach: players">
        <div class="player">
            <div class="row" data-bind="click: $root.shout">

                <div class="col-md-4">Name: <span data-bind="text: player.name"></span></div>

                <div class="col-md-2">Age: <span data-bind="text: player.age"></span></div>

                <div class="col-md-2">Club: <span data-bind="text: player.club"></span></div>

                <div class="col-md-2">Position: <span data-bind="text: player.position"></span></div>

                <div class="col-md-2">Rating: <span data-bind="text: player.rating"></span></div>

            </div>
            <div class="row">

                <div class="col-md-6">Height: <span data-bind="text: formattedHeight"></span></div>

                <div class="col-md-6">Weight: <span data-bind="text: player.weight"></span></div>

            </div>
        </div>
    </div>
</div>
